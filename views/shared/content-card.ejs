<div class="card">
        <h3 class="card-header">
                <div class="row justify-items-between">
                        <div class="col"><%= title %></div>
                        <div class="col">
                                <div class="input-group flex-nowrap">
                                        <span class="input-group-text" id="addon-wrapping">
                                                <i class="bi bi-search"></i>
                                        </span>
                                        <input
                                                type="text"
                                                class="form-control"
                                                placeholder="Search Event Name"
                                                aria-label="Search"
                                                aria-describedby="addon-wrapping"
                                                id="search-bar"
                                        />
                                </div>
                        </div>
                        <div class="col offset">
                                <% if (selected.explore) { %>
                                <button id="createEvent" 
                                        <% if (createMode) { %> 
                                                class="btn disabled btn-primary" 
                                        <%} else { %> 
                                                class="btn btn-primary" 
                                        <% } %>
                                        >
                                        <i class="bi bi-calendar2-plus"></i>
                                </button>
                                <% } %>
                        </div>
                </div>
        </h3>
        <div class="card-body">
                <table class="table table-striped table-bordered">
                        <thead>
                                <tr>
                                        <th>Icon</th>
                                        <th>Title</th>
                                        <th>Date</th>
                                        <% if (selected.requests) { %>
                                                <th>Username</th>
                                        <% } %>
                                        <th>Location</th>
                                        <% if (selected.attended || selected.requests) { %>
                                                <th>Status</th>
                                        <% } %>
                                        <% if (selected.explore || selected.requests) { %>
                                                <th>Actions</th>
                                        <% } %>
                                </tr>
                        </thead>
                        <tbody id="event-table-body"></tbody>
                </table>
        </div>
</div>
<script>
        let events = <%- JSON.stringify(events) %>;
        let selected = <%- JSON.stringify(selected) %>;
        let user = <%- JSON.stringify(user) %>;

        if (selected.explore) {
                document.getElementById("createEvent").addEventListener("click", () => {
                        window.location.href += "&create=true";
                });
        } 

        function renderTable(events, tableBodyId) {
                const tableBody = document.getElementById(tableBodyId);
                tableBody.innerHTML = ""; // Clear existing rows

                events.forEach((event) => {
                        const row = document.createElement("tr");
                        console.log(event);

                        const titleCell = document.createElement("td");
                        titleCell.textContent = event.title;

                        const dateCell = document.createElement("td");
                        dateCell.textContent = event.date;

                        const locationCell = document.createElement("td");
                        locationCell.textContent = event.location;
                        <% if (selected.requests) { %> 
                                const actionCell = document.createElement("td");

                                const approveButton = document.createElement("button");
                                approveButton.classList.add("btn", "btn-primary");
                                const approveIcon = document.createElement("i");
                                approveIcon.classList.add("bi", "bi-person-plus");
                                approveButton.appendChild(approveIcon);
                                approveButton.addEventListener("click", () => {
                                        fetch("/events/approve", {
                                                method: "POST",
                                                headers: {
                                                        "Content-Type": "application/json",
                                                },
                                                body: JSON.stringify({
                                                        requestId: event.request_id,
                                                }),
                                        }).then((response) => {
                                                if (response.status !== 200) {
                                                        alert("Failed to approve request");
                                                        return;
                                                }
                                                window.location.href = "/events";
                                                window.location.reload();
                                        });
                                });

                                const declineButton = document.createElement("button");
                                declineButton.classList.add("btn", "btn-danger");
                                const declineIcon = document.createElement("i");
                                declineIcon.classList.add("bi", "bi-person-dash");
                                declineButton.appendChild(declineIcon);
                                declineButton.addEventListener("click", () => {
                                        fetch("/events/reject", {
                                                method: "POST",
                                                headers: {
                                                        "Content-Type": "application/json",
                                                },
                                                body: JSON.stringify({
                                                        requestId: event.request_id,
                                                }),
                                        }).then((response) => {
                                                if (response.status !== 200) {
                                                        alert("Failed to decline request");
                                                        return;
                                                }
                                                window.location.href = "/events";
                                                window.location.reload();
                                        });
                                });

                        <% } %>

                        <% if (selected.explore) { %>
                                const actionCell = document.createElement("td");

                                // action button
                                const actionButton = document.createElement("button");
                                actionButton.classList.add("btn", "btn-primary");

                                // action icon 
                                const actionIcon = document.createElement("i");
                                actionIcon.classList.add("bi", "bi-person-plus");
                                actionButton.appendChild(actionIcon);
                                console.log(user, event);
                                const status = event.automatic_accept == 'true' || event.created_by == user.id;
                                actionButton.addEventListener("click", () => {
                                        fetch("/events/bind", {
                                                method: "POST",
                                                headers: {
                                                        "Content-Type": "application/json",
                                                },
                                                body: JSON.stringify({
                                                        eventId: event.event_id,
                                                        eventStatus: status ? 2 : 1, // 1 for pending, 2 for accepted
                                                }),
                                        }).then((response) =>  {
                                                if (response.status !== 200) {
                                                        alert("Failed to bind event");
                                                        return;
                                                }
                                                window.location.href = "/events";
                                                window.location.reload();
                                        });
                                });
                                actionCell.appendChild(actionButton);

                        <% } %>

                        <% if (selected.attended || selected.requests) { %>
                                const statusCell = document.createElement("td");
                                const eventStatus = [0, "Pending", "Accepted", "Declined", "Created"];
                                statusCell.textContent = eventStatus[event.status];
                        <% } %>

                        const iconCell = document.createElement("td");
                        const icon = document.createElement("i");
                        icon.classList.add("bi", event.icon);
                        iconCell.appendChild(icon);

                        row.appendChild(iconCell);
                        row.appendChild(titleCell);
                        row.appendChild(dateCell);
                        <% if (selected.requests) { %> 
                                const usernameCell = document.createElement("td");
                                usernameCell.textContent = event.username;
                                row.appendChild(usernameCell);
                        <% } %>
                        row.appendChild(locationCell);

                        <% if (selected.attended || selected.requests) { %>
                                row.appendChild(statusCell);
                        <% } %>

                        <% if (selected.requests) { %>
                                actionCell.appendChild(approveButton);
                                actionCell.appendChild(declineButton);
                        <% }%>

                        <% if (selected.explore || selected.requests) { %>
                                row.appendChild(actionCell);
                        <% } %>

                        tableBody.appendChild(row);
                });
        }

        function filterEvents(searchTerm) {
                const filtered = events.filter((event) => {
                        const searchTarget = Object.values(event).join(" ");
                        console.log(searchTarget);
                        return searchTarget.toLowerCase().includes(searchTerm.toLowerCase());
                });
                renderTable(filtered, "event-table-body");
        }

        document.getElementById("search-bar").addEventListener("input", (event) => {
                const searchTerm = event.target.value;
                filterEvents(searchTerm);
        });

        renderTable(events, "event-table-body");
</script>
